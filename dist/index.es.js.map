{"version":3,"file":"index.es.js","sources":["../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../src/lib/core-components/QuizResultFilter.jsx","../node_modules/snarkdown/dist/snarkdown.es.js","../node_modules/dompurify/dist/purify.js","../src/lib/core-components/helpers.jsx","../src/lib/core-components/Explanation.jsx","../src/lib/core-components/InstantFeedback.jsx","../src/lib/Core.jsx","../src/lib/Locale.jsx","../src/lib/Quiz.jsx","../node_modules/style-inject/dist/style-inject.es.js"],"sourcesContent":["import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction QuizResultFilter({ filteredValue, handleChange, appLocale }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = (value) => {\n    handleChange({ target: { value } });\n    setIsOpen(false);\n  };\n\n  const selectedOptionClass = isOpen ? 'selected-open' : '';\n  const selectedValuesLocale = {\n    all: appLocale.resultFilterAll,\n    correct: appLocale.resultFilterCorrect,\n    incorrect: appLocale.resultFilterIncorrect,\n    unanswered: appLocale.resultFilterUnanswered,\n  };\n\n  useEffect(() => {\n    const handleOutsideClick = (e) => {\n      if (\n        isOpen\n        && dropdownRef.current\n        && !dropdownRef.current.contains(e.target)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className=\"quiz-result-filter\">\n      <div\n        ref={dropdownRef}\n        className={`filter-dropdown-select ${isOpen ? 'open' : ''}`}\n        onClick={toggleDropdown}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            toggleDropdown();\n          }\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <div className={`selected-option ${selectedOptionClass}`}>\n          {selectedValuesLocale[filteredValue]}\n        </div>\n        <span className={`arrow ${isOpen ? 'up' : 'down'}`} />\n      </div>\n      {isOpen && (\n        <div\n          className=\"dropdown-options\"\n          role=\"menu\"\n          aria-labelledby=\"quiz-filter\"\n        >\n          <div\n            className={`dropdown-options-item ${\n              filteredValue === 'all' ? 'selected' : ''\n            }`}\n            onClick={() => handleOptionClick('all')}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleOptionClick('all');\n              }\n            }}\n            role=\"menuitem\"\n            tabIndex={0}\n          >\n            {appLocale.resultFilterAll}\n          </div>\n          <div\n            className={`dropdown-options-item ${\n              filteredValue === 'correct' ? 'selected' : ''\n            }`}\n            onClick={() => handleOptionClick('correct')}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleOptionClick('correct');\n              }\n            }}\n            role=\"menuitem\"\n            tabIndex={0}\n          >\n            {appLocale.resultFilterCorrect}\n          </div>\n          <div\n            className={`dropdown-options-item ${\n              filteredValue === 'incorrect' ? 'selected' : ''\n            }`}\n            onClick={() => handleOptionClick('incorrect')}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleOptionClick('incorrect');\n              }\n            }}\n            role=\"menuitem\"\n            tabIndex={0}\n          >\n            {appLocale.resultFilterIncorrect}\n          </div>\n          <div\n            className={`dropdown-options-item ${\n              filteredValue === 'unanswered' ? 'selected' : ''\n            }`}\n            onClick={() => handleOptionClick('unanswered')}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleOptionClick('unanswered');\n              }\n            }}\n            role=\"menuitem\"\n            tabIndex={0}\n          >\n            {appLocale.resultFilterUnanswered}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QuizResultFilter;\n","var e={\"\":[\"<em>\",\"</em>\"],_:[\"<strong>\",\"</strong>\"],\"*\":[\"<strong>\",\"</strong>\"],\"~\":[\"<s>\",\"</s>\"],\"\\n\":[\"<br />\"],\" \":[\"<br />\"],\"-\":[\"<hr />\"]};function n(e){return e.replace(RegExp(\"^\"+(e.match(/^(\\t| )+/)||\"\")[0],\"gm\"),\"\")}function r(e){return(e+\"\").replace(/\"/g,\"&quot;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}export default function t(a,c){var o,l,g,s,p,u=/((?:^|\\n+)(?:\\n---+|\\* \\*(?: \\*)+)\\n)|(?:^``` *(\\w*)\\n([\\s\\S]*?)\\n```$)|((?:(?:^|\\n+)(?:\\t|  {2,}).+)+\\n*)|((?:(?:^|\\n)([>*+-]|\\d+\\.)\\s+.*)+)|(?:!\\[([^\\]]*?)\\]\\(([^)]+?)\\))|(\\[)|(\\](?:\\(([^)]+?)\\))?)|(?:(?:^|\\n+)([^\\s].*)\\n(-{3,}|={3,})(?:\\n+|$))|(?:(?:^|\\n+)(#{1,6})\\s*(.+)(?:\\n+|$))|(?:`([^`].*?)`)|(  \\n\\n*|\\n{2,}|__|\\*\\*|[_*]|~~)/gm,m=[],h=\"\",i=c||{},d=0;function f(n){var r=e[n[1]||\"\"],t=m[m.length-1]==n;return r?r[1]?(t?m.pop():m.push(n),r[0|t]):r[0]:n}function $(){for(var e=\"\";m.length;)e+=f(m[m.length-1]);return e}for(a=a.replace(/^\\[(.+?)\\]:\\s*(.+)$/gm,function(e,n,r){return i[n.toLowerCase()]=r,\"\"}).replace(/^\\n+|\\n+$/g,\"\");g=u.exec(a);)l=a.substring(d,g.index),d=u.lastIndex,o=g[0],l.match(/[^\\\\](\\\\\\\\)*\\\\$/)||((p=g[3]||g[4])?o='<pre class=\"code '+(g[4]?\"poetry\":g[2].toLowerCase())+'\"><code'+(g[2]?' class=\"language-'+g[2].toLowerCase()+'\"':\"\")+\">\"+n(r(p).replace(/^\\n+|\\n+$/g,\"\"))+\"</code></pre>\":(p=g[6])?(p.match(/\\./)&&(g[5]=g[5].replace(/^\\d+/gm,\"\")),s=t(n(g[5].replace(/^\\s*[>*+.-]/gm,\"\"))),\">\"==p?p=\"blockquote\":(p=p.match(/\\./)?\"ol\":\"ul\",s=s.replace(/^(.*)(\\n|$)/gm,\"<li>$1</li>\")),o=\"<\"+p+\">\"+s+\"</\"+p+\">\"):g[8]?o='<img src=\"'+r(g[8])+'\" alt=\"'+r(g[7])+'\">':g[10]?(h=h.replace(\"<a>\",'<a href=\"'+r(g[11]||i[l.toLowerCase()])+'\">'),o=$()+\"</a>\"):g[9]?o=\"<a>\":g[12]||g[14]?o=\"<\"+(p=\"h\"+(g[14]?g[14].length:g[13]>\"=\"?1:2))+\">\"+t(g[12]||g[15],i)+\"</\"+p+\">\":g[16]?o=\"<code>\"+r(g[16])+\"</code>\":(g[17]||g[1])&&(o=f(g[17]||\"--\"))),h+=l,h+=o;return(h+a.substring(d)+$()).replace(/^\\n+|\\n+$/g,\"\")}\n//# sourceMappingURL=snarkdown.es.js.map\n","/*! @license DOMPurify 3.1.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.3/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  const numberIsNaN = unapply(Number.isNaN);\n\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue() {\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  const DOCTYPE_NAME = seal(/^html$/i);\n  const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME,\n    CUSTOM_ELEMENT: CUSTOM_ELEMENT\n  });\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  const NODE_TYPE = {\n    element: 1,\n    attribute: 2,\n    text: 3,\n    cdataSection: 4,\n    entityReference: 5,\n    // Deprecated\n    entityNode: 6,\n    // Deprecated\n    progressingInstruction: 7,\n    comment: 8,\n    document: 9,\n    documentType: 10,\n    documentFragment: 11,\n    notation: 12 // Deprecated\n  };\n\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '3.1.3';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE,\n      CUSTOM_ELEMENT\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n\n    /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */\n    let SAFE_FOR_XML = true;\n\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n\n    /* Specify the maximum element nesting depth to prevent mXSS */\n    const MAX_NESTING_DEPTH = 255;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'annotation-xml']);\n\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (\n      // eslint-disable-next-line unicorn/no-typeof-undefined\n      typeof elm.__depth !== 'undefined' && typeof elm.__depth !== 'number' ||\n      // eslint-disable-next-line unicorn/no-typeof-undefined\n      typeof elm.__removalCount !== 'undefined' && typeof elm.__removalCount !== 'number' || typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any ocurrence of processing instructions */\n      if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any kind of possibly harmful comments */\n      if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              const childClone = cloneNode(childNodes[i], true);\n              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n              parentNode.insertBefore(childClone, getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement || value === '__depth' || value === '__removalCount')) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Work around a security issue with comments inside attributes */\n        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        const parentNode = getParentNode(shadowNode);\n\n        /* Set the nesting depth of an element */\n        if (shadowNode.nodeType === NODE_TYPE.element) {\n          if (parentNode && parentNode.__depth) {\n            /*\n              We want the depth of the node in the original tree, which can\n              change when it's removed from its parent.\n            */\n            shadowNode.__depth = (shadowNode.__removalCount || 0) + parentNode.__depth + 1;\n          } else {\n            shadowNode.__depth = 1;\n          }\n        }\n\n        /*\n         * Remove an element if nested too deeply to avoid mXSS\n         * or if the __depth might have been tampered with\n         */\n        if (shadowNode.__depth >= MAX_NESTING_DEPTH || shadowNode.__depth < 0 || numberIsNaN(shadowNode.__depth)) {\n          _forceRemove(shadowNode);\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          shadowNode.content.__depth = shadowNode.__depth;\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        const parentNode = getParentNode(currentNode);\n\n        /* Set the nesting depth of an element */\n        if (currentNode.nodeType === NODE_TYPE.element) {\n          if (parentNode && parentNode.__depth) {\n            /*\n              We want the depth of the node in the original tree, which can\n              change when it's removed from its parent.\n            */\n            currentNode.__depth = (currentNode.__removalCount || 0) + parentNode.__depth + 1;\n          } else {\n            currentNode.__depth = 1;\n          }\n        }\n\n        /*\n         * Remove an element if nested too deeply to avoid mXSS\n         * or if the __depth might have been tampered with\n         */\n        if (currentNode.__depth >= MAX_NESTING_DEPTH || currentNode.__depth < 0 || numberIsNaN(currentNode.__depth)) {\n          _forceRemove(currentNode);\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          currentNode.content.__depth = currentNode.__depth;\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n      }\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import snarkdown from 'snarkdown';\nimport dompurify from 'dompurify';\n\nexport const rawMarkup = (data) => {\n  const sanitizer = dompurify.sanitize;\n  return { __html: snarkdown(sanitizer(data)) };\n};\n\nexport const checkAnswer = (index, correctAnswer, answerSelectionType, answers, {\n  userInput,\n  userAttempt,\n  currentQuestionIndex,\n  continueTillCorrect,\n  showNextQuestionButton,\n  incorrect,\n  correct,\n  setButtons,\n  setIsCorrect,\n  setIncorrectAnswer,\n  setCorrect,\n  setIncorrect,\n  setShowNextQuestionButton,\n  setUserInput,\n  setUserAttempt,\n}) => {\n  const indexStr = `${index}`;\n  const disabledAll = Object.keys(answers).map(() => ({ disabled: true }));\n  const userInputCopy = [...userInput];\n  if (answerSelectionType === 'single') {\n    if (userInputCopy[currentQuestionIndex] === undefined) {\n      userInputCopy[currentQuestionIndex] = index;\n    }\n\n    if (indexStr === correctAnswer) {\n      if (incorrect.indexOf(currentQuestionIndex) < 0 && correct.indexOf(currentQuestionIndex) < 0) {\n        correct.push(currentQuestionIndex);\n      }\n\n      setButtons((prevState) => ({\n        ...prevState,\n        ...disabledAll,\n        [index - 1]: {\n          className: (indexStr === correctAnswer) ? 'correct' : 'incorrect',\n        },\n      }));\n\n      setIsCorrect(true);\n      setIncorrectAnswer(false);\n      setCorrect(correct);\n      setShowNextQuestionButton(true);\n    } else {\n      if (correct.indexOf(currentQuestionIndex) < 0 && incorrect.indexOf(currentQuestionIndex) < 0) {\n        incorrect.push(currentQuestionIndex);\n      }\n\n      if (continueTillCorrect) {\n        setButtons((prevState) => (\n          {\n\n            ...prevState,\n            [index - 1]: {\n              disabled: !prevState[index - 1],\n            },\n          }\n        ));\n      } else {\n        setButtons((prevState) => (\n          {\n\n            ...prevState,\n            ...disabledAll,\n            [index - 1]: {\n              className: (indexStr === correctAnswer) ? 'correct' : 'incorrect',\n            },\n          }\n        ));\n\n        setShowNextQuestionButton(true);\n      }\n\n      setIncorrectAnswer(true);\n      setIsCorrect(false);\n      setIncorrect(incorrect);\n    }\n  } else if (answerSelectionType === 'personality') {\n    // For personality quizzes, always set correct and do not check against a correctAnswer\n    setIsCorrect(true);\n    setIncorrectAnswer(false);\n    setShowNextQuestionButton(true);\n    \n    const adjustedIndex = index - 1;\n    const selectedTrigram = answers[adjustedIndex].trigram;\n    \n    userInputCopy[currentQuestionIndex] = selectedTrigram; // Record the trigram of the user's choice\n    setUserInput(userInputCopy); // Update the userInput state\n    \n    // Disable all buttons after a choice is made to prevent changing answers\n    setButtons((prevState) => ({\n      ...prevState,\n      ...Object.keys(prevState).reduce((acc, key) => {\n        acc[key] = { ...prevState[key], disabled: true };\n        return acc;\n      }, {}),\n      [index - 1]: {\n        ...prevState[index - 1],\n        className: 'selected'  // Highlight the selected answer\n      }\n    }));\n\n    // Show the next question button if applicable\n    setShowNextQuestionButton(true);\n\n    // Optionally, if you track correct and incorrect indices, add to correct as there are no incorrect answers\n    if (correct.indexOf(currentQuestionIndex) < 0) {\n      correct.push(currentQuestionIndex);\n    }\n    setCorrect(correct);\n\n    // Log for debugging\n    console.log(\"Selected trigram: \", selectedTrigram);\n    console.log(\"Updated userInput: \", userInputCopy);\n  } else {\n    const maxNumberOfMultipleSelection = correctAnswer.length;\n\n    if (userInputCopy[currentQuestionIndex] === undefined) {\n      userInputCopy[currentQuestionIndex] = [];\n    }\n\n    if (userInputCopy[currentQuestionIndex].length < maxNumberOfMultipleSelection) {\n      userInputCopy[currentQuestionIndex].push(index);\n\n      if (correctAnswer.includes(index)) {\n        if (userInputCopy[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n          setButtons((prevState) => ({\n            ...prevState,\n            [index - 1]: {\n              disabled: !prevState[index - 1],\n              className: (correctAnswer.includes(index)) ? 'correct' : 'incorrect',\n            },\n          }));\n        }\n      } else if (userInputCopy[currentQuestionIndex].length <= maxNumberOfMultipleSelection) {\n        setButtons((prevState) => ({\n          ...prevState,\n          [index - 1]: {\n            className: (correctAnswer.includes(index)) ? 'correct' : 'incorrect',\n          },\n        }));\n      }\n    }\n\n    if (maxNumberOfMultipleSelection === userAttempt) {\n      let cnt = 0;\n      for (let i = 0; i < correctAnswer.length; i += 1) {\n        if (userInputCopy[currentQuestionIndex].includes(correctAnswer[i])) {\n          cnt += 1;\n        }\n      }\n\n      for (let i = 0; i < answers.length; i += 1) {\n        if (correctAnswer.includes(i + 1)) {\n          setButtons((prevState) => ({\n            ...prevState,\n            [i]: {},\n          }));\n        }\n      }\n\n      if (cnt === maxNumberOfMultipleSelection) {\n        correct.push(currentQuestionIndex);\n\n        setIsCorrect(true);\n        setIncorrectAnswer(false);\n        setCorrect(correct);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      } else {\n        incorrect.push(currentQuestionIndex);\n\n        setIncorrectAnswer(true);\n        setIsCorrect(false);\n        setIncorrect(incorrect);\n        setShowNextQuestionButton(true);\n        setUserAttempt(1);\n      }\n    } else if (!showNextQuestionButton) {\n      setUserAttempt(userAttempt + 1);\n    }\n  }\n  setUserInput(userInputCopy);\n};\n\n// Add a new function to tally results\nconst tallyResults = (userInput, questions) => {\n  const results = {};\n  userInput.forEach((answerIndex, questionIndex) => {\n    const trigram = questions[questionIndex].answers[answerIndex].trigram;\n    if (results[trigram]) {\n      results[trigram]++;\n    } else {\n      results[trigram] = 1;\n    }\n  });\n  return results;\n};\n\nconst onComplete = () => {\n  const finalResults = tallyResults(userInput);\n  console.log(finalResults); // Handle the results as needed\n};\n\nexport const selectAnswer = (index, correctAnswer, answerSelectionType, answers, {\n  userInput,\n  currentQuestionIndex,\n  setButtons,\n  setShowNextQuestionButton,\n  incorrect,\n  correct,\n  setCorrect,\n  setIncorrect,\n  setUserInput,\n}) => {\n  const selectedButtons = Object.keys(answers).map(() => ({ selected: false }));\n  const userInputCopy = [...userInput];\n\n  // Check if it's a personality quiz type\n  if (answerSelectionType === 'personality') {\n    // Adjust the index to match the array's zero-based indexing\n    const adjustedIndex = index - 1;\n    const selectedTrigram = answers[adjustedIndex].trigram;\n    console.log(\"selectedTrigram: \", selectedTrigram);\n    userInputCopy[currentQuestionIndex] = selectedTrigram; // Simply record the user's choice\n\n    setButtons((prevState) => ({\n      ...prevState,\n      ...selectedButtons,\n      [index - 1]: {\n        className: 'selected',\n      },\n    }));\n\n    setShowNextQuestionButton(true);\n    // setUserInput(userInputCopy); done below\n  } else if (answerSelectionType === 'single') {\n    correctAnswer = Number(correctAnswer);\n    userInputCopy[currentQuestionIndex] = index;\n\n    if (index === correctAnswer) {\n      if (correct.indexOf(currentQuestionIndex) < 0) {\n        correct.push(currentQuestionIndex);\n      }\n      if (incorrect.indexOf(currentQuestionIndex) >= 0) {\n        incorrect.splice(incorrect.indexOf(currentQuestionIndex), 1);\n      }\n    } else {\n      if (incorrect.indexOf(currentQuestionIndex) < 0) {\n        incorrect.push(currentQuestionIndex);\n      }\n      if (correct.indexOf(currentQuestionIndex) >= 0) {\n        correct.splice(correct.indexOf(currentQuestionIndex), 1);\n      }\n    }\n    setCorrect(correct);\n    setIncorrect(incorrect);\n\n    setButtons((prevState) => ({\n      ...prevState,\n      ...selectedButtons,\n      [index - 1]: {\n        className: 'selected',\n      },\n    }));\n\n    setShowNextQuestionButton(true);\n  } else {\n    // Handle multiple selection type\n    if (userInputCopy[currentQuestionIndex] === undefined) {\n      userInputCopy[currentQuestionIndex] = [];\n    }\n    if (userInputCopy[currentQuestionIndex].includes(index)) {\n      userInputCopy[currentQuestionIndex].splice(userInputCopy[currentQuestionIndex].indexOf(index), 1);\n    } else {\n      userInputCopy[currentQuestionIndex].push(index);\n    }\n\n    if (userInputCopy[currentQuestionIndex].length === correctAnswer.length) {\n      let exactMatch = true;\n      for (const input of userInput[currentQuestionIndex]) {\n        if (!correctAnswer.includes(input)) {\n          exactMatch = false;\n          if (incorrect.indexOf(currentQuestionIndex) < 0) {\n            incorrect.push(currentQuestionIndex);\n          }\n          if (correct.indexOf(currentQuestionIndex) >= 0) {\n            correct.splice(correct.indexOf(currentQuestionIndex), 1);\n          }\n          break;\n        }\n      }\n      if (exactMatch) {\n        if (correct.indexOf(currentQuestionIndex) < 0) {\n          correct.push(currentQuestionIndex);\n        }\n        if (incorrect.indexOf(currentQuestionIndex) >= 0) {\n          incorrect.splice(incorrect.indexOf(currentQuestionIndex), 1);\n        }\n      }\n    } else {\n      if (incorrect.indexOf(currentQuestionIndex) < 0) {\n        incorrect.push(currentQuestionIndex);\n      }\n      if (correct.indexOf(currentQuestionIndex) >= 0) {\n        correct.splice(correct.indexOf(currentQuestionIndex), 1);\n      }\n    }\n    setCorrect(correct);\n    setIncorrect(incorrect);\n    setButtons((prevState) => ({\n      ...prevState,\n      [index - 1]: {\n        className: userInputCopy[currentQuestionIndex].includes(index) ? 'selected' : undefined,\n      },\n    }));\n\n    if (userInputCopy[currentQuestionIndex].length > 0) {\n      setShowNextQuestionButton(true);\n    }\n  }\n  setUserInput(userInputCopy);\n};\n","import React from 'react';\n\nfunction Explanation({ question, isResultPage }) {\n  const { explanation } = question;\n\n  if (!explanation) {\n    return null;\n  }\n\n  if (isResultPage) {\n    return (\n      <div className=\"explanation\">\n        {explanation}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <br />\n      {explanation}\n    </div>\n  );\n}\n\nexport default Explanation;\n","import React, { useEffect } from 'react';\nimport Explanation from './Explanation';\n\nconst renderMessageForCorrectAnswer = (question) => {\n  const defaultMessage = 'You are correct. Please click Next to continue.';\n  return question.messageForCorrectAnswer || defaultMessage;\n};\n\nconst renderMessageForIncorrectAnswer = (question) => {\n  const defaultMessage = 'Incorrect answer. Please try again.';\n  return question.messageForIncorrectAnswer || defaultMessage;\n};\n\nfunction InstantFeedback({\n  showInstantFeedback, incorrectAnswer, correctAnswer, question, onQuestionSubmit, userAnswer,\n}) {\n  useEffect(() => {\n    if (onQuestionSubmit && (correctAnswer || incorrectAnswer)) {\n      onQuestionSubmit({ question, userAnswer, isCorrect: correctAnswer });\n    }\n  }, [correctAnswer, incorrectAnswer]);\n\n  return (\n    <>\n      {incorrectAnswer && showInstantFeedback\n            && <div className=\"alert incorrect\">{renderMessageForIncorrectAnswer(question)}</div>}\n      {correctAnswer && showInstantFeedback\n            && (\n            <div className=\"alert correct\">\n              {renderMessageForCorrectAnswer(question)}\n              <Explanation question={question} isResultPage={false} />\n            </div>\n            )}\n    </>\n  );\n}\n\nexport default InstantFeedback;\n","import React, {\n  useState, useEffect, useCallback, Fragment,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport QuizResultFilter from './core-components/QuizResultFilter';\nimport { checkAnswer, selectAnswer, rawMarkup } from './core-components/helpers';\nimport InstantFeedback from './core-components/InstantFeedback';\nimport Explanation from './core-components/Explanation';\n\nfunction Core({\n  questions, appLocale, showDefaultResult, onComplete, customResultPage,\n  showInstantFeedback, continueTillCorrect, revealAnswerOnSubmit, allowNavigation,\n  onQuestionSubmit, timer, allowPauseTimer,\n}) {\n  const [incorrectAnswer, setIncorrectAnswer] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showNextQuestionButton, setShowNextQuestionButton] = useState(false);\n  const [endQuiz, setEndQuiz] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [buttons, setButtons] = useState({});\n  const [correct, setCorrect] = useState([]);\n  const [incorrect, setIncorrect] = useState([]);\n  const [unanswered, setUnanswered] = useState([]);\n  const [userInput, setUserInput] = useState([]);\n  const [filteredValue, setFilteredValue] = useState('all');\n  const [userAttempt, setUserAttempt] = useState(1);\n  const [showDefaultResultState, setShowDefaultResult] = useState(true);\n  const [answerSelectionTypeState, setAnswerSelectionType] = useState(undefined);\n\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [correctPoints, setCorrectPoints] = useState(0);\n  const [activeQuestion, setActiveQuestion] = useState(questions[currentQuestionIndex]);\n  const [questionSummary, setQuestionSummary] = useState(undefined);\n  const [timeRemaining, setTimeRemaining] = useState(timer);\n  const [isRunning, setIsRunning] = useState(true);\n\n  useEffect(() => {\n    setShowDefaultResult(showDefaultResult !== undefined ? showDefaultResult : true);\n  }, [showDefaultResult]);\n\n  useEffect(() => {\n    setActiveQuestion(questions[currentQuestionIndex]);\n  }, [currentQuestionIndex, questions]);\n\n  useEffect(() => {\n    const { answerSelectionType } = activeQuestion;\n    // Default single to avoid code breaking due to automatic version upgrade\n    setAnswerSelectionType(answerSelectionType || 'single');\n  }, [activeQuestion, currentQuestionIndex]);\n\n  useEffect(() => {\n    if (endQuiz) {\n      setIsRunning(false);\n      let totalPointsTemp = 0;\n      let correctPointsTemp = 0;\n      for (let i = 0; i < questions.length; i += 1) {\n        let point = questions[i].point || 0;\n        if (typeof point === 'string' || point instanceof String) {\n          point = parseInt(point, 10);\n        }\n\n        totalPointsTemp += point;\n\n        if (correct.includes(i)) {\n          correctPointsTemp += point;\n        }\n      }\n      setTotalPoints(totalPointsTemp);\n      setCorrectPoints(correctPointsTemp);\n    }\n  }, [endQuiz]);\n\n  useEffect(() => {\n    setQuestionSummary({\n      numberOfQuestions: questions.length,\n      numberOfCorrectAnswers: correct.length,\n      numberOfIncorrectAnswers: incorrect.length,\n      questions,\n      userInput,\n      totalPoints,\n      correctPoints,\n    });\n  }, [totalPoints, correctPoints]);\n\n  useEffect(() => {\n    if (endQuiz && onComplete !== undefined && questionSummary !== undefined) {\n      onComplete(questionSummary);\n    }\n  }, [questionSummary]);\n\n  const nextQuestion = (currentQuestionIdx) => {\n    setIncorrectAnswer(false);\n    setIsCorrect(false);\n    setShowNextQuestionButton(false);\n    setButtons({});\n\n    console.log(\"Current Question Index:\", currentQuestionIdx);\n    console.log(\"User Input Length:\", userInput.length);\n    console.log(\"Total Questions:\", questions.length);\n    \n    if (currentQuestionIdx + 1 === questions.length) {\n      if (userInput.length !== questions.length) {\n        alert('Quiz is incomplete');\n      } else if (allowNavigation) {\n        const submitQuiz = confirm('You have finished all the questions. Submit Quiz now?');\n        if (submitQuiz) {\n          setEndQuiz(true);\n        }\n      } else {\n        setEndQuiz(true);\n      }\n    } else {\n      setCurrentQuestionIndex(currentQuestionIdx + 1);\n    }\n  };\n\n  const handleChange = (event) => {\n    setFilteredValue(event.target.value);\n  };\n\n  const renderAnswerInResult = (question, userInputIndex) => {\n    const { answers, correctAnswer, questionType } = question;\n    let { answerSelectionType } = question;\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map((answer, index) => {\n      let answerBtnClassName = '';\n\n      if (answerSelectionType === 'personality') {\n        // Highlight the selected answer and grey out others\n        answerBtnClassName = answer.trigram === userInputIndex ? 'selected' : 'greyed-out';\n      } else if (answerSelectionType === 'single') {\n        // correctAnswer - is string\n        const isCorrect = `${index + 1}` === correctAnswer;\n        const isUserAnswer = `${index + 1}` === `${userInputIndex}`;\n        answerBtnClassName = isCorrect ? 'correct' : (isUserAnswer ? 'incorrect' : '');\n      } else {\n        // correctAnswer - is array of numbers\n        const isCorrect = correctAnswer.includes(index + 1);\n        const isUserAnswer = userInputIndex?.includes(index + 1);\n        answerBtnClassName = isCorrect ? 'correct' : (isUserAnswer ? 'incorrect' : '');\n      }\n\n      return (\n        <div key={nanoid()}>\n          <button\n            type=\"button\"\n            disabled\n            className={`answerBtn btn ${answerBtnClassName}`}\n          >\n            {questionType === 'text' && <span>{answer.option}</span>}\n            {questionType === 'photo' && <img src={answer.option} alt=\"answer\" />}\n            {/* Display trigram for personality type questions */}\n            {answerSelectionType === 'personality' && (\n              <span className=\"trigram\"> ({answer.trigram})</span>\n            )}\n          </button>\n        </div>\n      );\n    });\n  };\n\n  const renderTags = (answerSelectionType, numberOfSelection, segment) => {\n    const {\n      singleSelectionTagText,\n      multipleSelectionTagText,\n      pickNumberOfSelection,\n    } = appLocale;\n\n    return (\n      <div className=\"tag-container\">\n        {answerSelectionType === 'single'\n          && <span className=\"single selection-tag\">{singleSelectionTagText}</span>}\n        {answerSelectionType === 'multiple'\n          && <span className=\"multiple selection-tag\">{multipleSelectionTagText}</span>}\n        <span className=\"number-of-selection\">\n          {pickNumberOfSelection.replace('<numberOfSelection>', numberOfSelection)}\n        </span>\n        {segment && <span className=\"selection-tag segment\">{segment}</span>}\n      </div>\n    );\n  };\n\n  const isCorrectCheck = (index, correctAnswerIndex) => {\n    if (typeof correctAnswerIndex === 'string') {\n      return index === Number(correctAnswerIndex);\n    }\n\n    if (typeof correctAnswerIndex === 'object') {\n      return correctAnswerIndex.find((element) => element === index) !== undefined;\n    }\n\n    return false;\n  };\n\n  const renderQuizResultQuestions = useCallback(() => {\n    let filteredQuestions;\n    let filteredUserInput;\n\n    if (filteredValue !== 'all') {\n      let targetQuestions = unanswered;\n      if (filteredValue === 'correct') {\n        targetQuestions = correct;\n      } else if (filteredValue === 'incorrect') {\n        targetQuestions = incorrect;\n      }\n      filteredQuestions = questions.filter(\n        (_, index) => targetQuestions.indexOf(index) !== -1,\n      );\n      filteredUserInput = userInput.filter(\n        (_, index) => targetQuestions.indexOf(index) !== -1,\n      );\n    }\n\n    return (filteredQuestions || questions).map((question, index) => {\n      const userInputIndex = filteredUserInput\n        ? filteredUserInput[index]\n        : userInput[index];\n\n      // Default single to avoid code breaking due to automatic version upgrade\n      const answerSelectionType = question.answerSelectionType || 'single';\n\n      return (\n        <div className=\"result-answer-wrapper\" key={nanoid()}>\n          <h3\n            dangerouslySetInnerHTML={rawMarkup(\n              `Q${question.questionIndex}: ${question.question\n              } ${appLocale.marksOfQuestion.replace('<marks>', question.point)}`,\n            )}\n          />\n          {question.questionPic && (\n            <img src={question.questionPic} alt=\"question\" />\n          )}\n          {renderTags(\n            answerSelectionType,\n            (answerSelectionType !== 'personality' && question.correctAnswer && Array.isArray(question.correctAnswer)) ? question.correctAnswer.length : 1,\n            question.segment || 'defaultSegment'\n          )}\n          <div className=\"result-answer\">\n            {renderAnswerInResult(question, userInputIndex)}\n          </div>\n          <Explanation question={question} isResultPage />\n        </div>\n      );\n    });\n  }, [endQuiz, filteredValue]);\n\n  const renderAnswers = (question, answerButtons) => {\n    const {\n      answers, correctAnswer, questionType, questionIndex,\n    } = question;\n    let { answerSelectionType } = question;\n    const onClickAnswer = (index) => checkAnswer(index + 1, correctAnswer, answerSelectionType, answers, {\n      userInput,\n      userAttempt,\n      currentQuestionIndex,\n      continueTillCorrect,\n      showNextQuestionButton,\n      incorrect,\n      correct,\n      setButtons,\n      setIsCorrect,\n      setIncorrectAnswer,\n      setCorrect,\n      setIncorrect,\n      setShowNextQuestionButton,\n      setUserInput,\n      setUserAttempt,\n    });\n\n    const onSelectAnswer = (index) => selectAnswer(index + 1, correctAnswer, answerSelectionType, answers, {\n      userInput,\n      currentQuestionIndex,\n      setButtons,\n      setShowNextQuestionButton,\n      incorrect,\n      correct,\n      setCorrect,\n      setIncorrect,\n      setUserInput,\n    });\n\n    const checkSelectedAnswer = (index) => {\n      if (userInput[questionIndex - 1] === undefined) {\n        return false;\n      }\n      if (answerSelectionType === 'single') {\n        return userInput[questionIndex - 1] === index;\n      }\n      return Array.isArray(userInput[questionIndex - 1]) && userInput[questionIndex - 1].includes(index);\n    };\n\n    // Default single to avoid code breaking due to automatic version upgrade\n    answerSelectionType = answerSelectionType || 'single';\n\n    return answers.map((answer, index) => (\n      <Fragment key={nanoid()}>\n        {(answerButtons[index] !== undefined)\n          ? (\n            <button\n              type=\"button\"\n              disabled={answerButtons[index].disabled || false}\n              className={`${answerButtons[index].className} answerBtn btn ${isCorrectCheck(index + 1, correctAnswer) && showInstantFeedback\n                ? 'correct'\n                : ''\n                }`}\n              onClick={() => (revealAnswerOnSubmit ? onSelectAnswer(index) : onClickAnswer(index))}\n            >\n              {questionType === 'text' && <span>{answer.option}</span>}\n              {questionType === 'photo' && <img src={answer.option} alt=\"answer\" />}\n            </button>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => (revealAnswerOnSubmit ? onSelectAnswer(index) : onClickAnswer(index))}\n              className={`answerBtn btn ${(allowNavigation && checkSelectedAnswer(index + 1)) ? 'selected' : null}`}\n            >\n              {questionType === 'text' && <span>{answer.option}</span>}\n              {questionType === 'photo' && <img src={answer.option} alt=\"answer\" />}\n            </button>\n          )}\n      </Fragment>\n    ));\n  };\n\n  const getUnansweredQuestions = () => {\n    questions.forEach((question, index) => {\n      if (userInput[index] === undefined) {\n        setUnanswered((oldArray) => [...oldArray, index]);\n      }\n    });\n  };\n\n  const renderResult = () => {\n    // Compute the tally of trigrams\n    const trigramTally = userInput.reduce((acc, trigram) => {\n      if (trigram) { // Ensure the trigram is defined\n        acc[trigram] = (acc[trigram] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    return (\n      <div className=\"card-body\">\n        <h2>\n          {appLocale.resultPageHeaderText\n            .replace('<correctIndexLength>', correct.length)\n            .replace('<questionLength>', questions.length)}\n        </h2>\n        <h2>\n          {appLocale.resultPagePoint\n            .replace('<correctPoints>', correctPoints)\n            .replace('<totalPoints>', totalPoints)}\n        </h2>\n        <br />\n        <QuizResultFilter\n          filteredValue={filteredValue}\n          handleChange={handleChange}\n          appLocale={appLocale}\n        />\n        <div className=\"trigram-tally\">\n          <h3>Trigram Tally:</h3>\n          <ul>\n            {Object.entries(trigramTally).map(([trigram, count]) => (\n              <li key={trigram}>{`${trigram}: ${count}`}</li>\n            ))}\n          </ul>\n        </div>\n        {renderQuizResultQuestions()}\n      </div>\n    );\n  };  \n\n  useEffect(() => {\n    let countdown;\n\n    if (timer && isRunning && timeRemaining > 0) {\n      countdown = setInterval(() => {\n        setTimeRemaining((prevTime) => prevTime - 1);\n      }, 1000);\n    }\n    return () => timer && clearInterval(countdown);\n  }, [isRunning, timeRemaining, timer]);\n\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  const formatTime = (time) => (time < 10 ? '0' : '');\n  const displayTime = (time) => {\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor((time % 3600) / 60);\n    const seconds = time % 60;\n\n    return `${formatTime(hours)}${hours}:${formatTime(minutes)}${minutes}:${formatTime(seconds)\n      }${seconds}`;\n  };\n\n  const handleTimeUp = () => {\n    setIsRunning(false);\n    setEndQuiz(true);\n    getUnansweredQuestions();\n  };\n\n  return (\n    <div className=\"questionWrapper\">\n      {timer && !isRunning && (\n        <div>\n          {appLocale.timerTimeTaken}\n          :\n          {' '}\n          <b>{displayTime(timer - timeRemaining)}</b>\n        </div>\n      )}\n\n      {timer && isRunning && (\n        <div>\n          {appLocale.timerTimeRemaining}\n          :\n          {' '}\n          <b>\n            {displayTime(timeRemaining)}\n          </b>\n        </div>\n      )}\n      {timer && timeRemaining === 0 && isRunning && handleTimeUp()}\n\n      {!endQuiz && (\n        <div className=\"questionWrapperBody\">\n          <div>\n            {`${appLocale.question} ${currentQuestionIndex + 1} / ${questions.length\n              }:`}\n            <br />\n            {timer && allowPauseTimer && (\n              <button type=\"button\" className=\"timerBtn\" onClick={toggleTimer}>\n                {isRunning ? appLocale.pauseScreenPause : appLocale.pauseScreenResume}\n              </button>\n            )}\n          </div>\n          {isRunning ? (\n            <>\n              <h3\n                dangerouslySetInnerHTML={rawMarkup(\n                  `${activeQuestion && activeQuestion.question\n                  } ${appLocale.marksOfQuestion.replace(\n                    '<marks>',\n                    activeQuestion.point,\n                  )}`,\n                )}\n              />\n              {activeQuestion && activeQuestion.questionPic && (\n                <img src={activeQuestion.questionPic} alt=\"question\" />\n              )}\n              {activeQuestion && renderTags(\n                answerSelectionTypeState,\n                answerSelectionTypeState === 'personality' ? 1 : (activeQuestion.correctAnswer && Array.isArray(activeQuestion.correctAnswer) ? activeQuestion.correctAnswer.length : 0),\n                activeQuestion.segment || 'defaultSegment'\n              )}\n              <div className=\"questionModal\">\n                <InstantFeedback\n                  question={activeQuestion}\n                  showInstantFeedback={showInstantFeedback}\n                  correctAnswer={isCorrect}\n                  incorrectAnswer={incorrectAnswer}\n                  onQuestionSubmit={onQuestionSubmit}\n                  userAnswer={[...userInput].pop()}\n                />\n              </div>\n              {activeQuestion && renderAnswers(activeQuestion, buttons)}\n              {(showNextQuestionButton || allowNavigation) && (\n                <div className=\"questionBtnContainer\">\n                  {allowNavigation && currentQuestionIndex > 0 && (\n                    <button\n                      onClick={() => nextQuestion(currentQuestionIndex - 2)}\n                      className=\"prevQuestionBtn btn\"\n                      type=\"button\"\n                    >\n                      {appLocale.prevQuestionBtn}\n                    </button>\n                  )}\n\n                  <button\n                    onClick={() => nextQuestion(currentQuestionIndex)}\n                    className=\"nextQuestionBtn btn\"\n                    type=\"button\"\n                  >\n                    {appLocale.nextQuestionBtn}\n                  </button>\n                </div>\n              )}\n            </>\n          ) : (\n            <span className=\"timerPauseScreen dark:text-white text-black\">\n              <br />\n              <br />\n              {appLocale.pauseScreenDisplay}\n            </span>\n          )}\n        </div>\n      )}\n      {endQuiz && showDefaultResultState && customResultPage === undefined\n        && renderResult()}\n      {endQuiz && !showDefaultResultState && customResultPage !== undefined\n        && customResultPage(questionSummary)}\n    </div>\n  );\n}\n\nexport default Core;\n","const defaultLocale = {\n  landingHeaderText: '<questionLength> Questions',\n  question: 'Question',\n  startQuizBtn: 'Start Quiz',\n  resultFilterAll: 'All',\n  resultFilterCorrect: 'Correct',\n  resultFilterIncorrect: 'Incorrect',\n  resultFilterUnanswered: 'Unanswered',\n  nextQuestionBtn: 'Next',\n  prevQuestionBtn: 'Prev',\n  resultPageHeaderText: 'You have completed the quiz. You got <correctIndexLength> out of <questionLength> questions.',\n  resultPagePoint: 'You scored <correctPoints> out of <totalPoints>.',\n  pauseScreenDisplay: 'Test is paused. Clicked the Resume button to continue',\n  timerTimeRemaining: 'Time Remaining',\n  timerTimeTaken: 'Time Taken',\n  pauseScreenPause: 'Pause',\n  pauseScreenResume: 'Resume',\n  singleSelectionTagText: 'Single Selection',\n  multipleSelectionTagText: 'Multiple Selection',\n  pickNumberOfSelection: 'Pick <numberOfSelection>',\n  marksOfQuestion: '(<marks> marks)',\n};\n\nexport default defaultLocale;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Core from './Core';\nimport defaultLocale from './Locale';\nimport './styles.css';\n\nfunction Quiz({\n  quiz,\n  shuffle,\n  shuffleAnswer,\n  showDefaultResult,\n  onComplete,\n  customResultPage,\n  showInstantFeedback,\n  continueTillCorrect,\n  revealAnswerOnSubmit,\n  allowNavigation,\n  onQuestionSubmit,\n  disableSynopsis,\n  timer,\n  allowPauseTimer,\n}) {\n  const [start, setStart] = useState(false);\n  const [questions, setQuestions] = useState(quiz.questions);\n  const nrOfQuestions = quiz.nrOfQuestions && quiz.nrOfQuestions < quiz.questions.length\n    ? quiz.nrOfQuestions\n    : quiz.questions.length;\n\n  // Shuffle answers funtion here\n  const shuffleAnswerSequence = (oldQuestions = []) => {\n    const newQuestions = oldQuestions.map((question) => {\n      const answerWithIndex = question.answers?.map((ans, i) => [ans, i]);\n      const shuffledAnswersWithIndex = answerWithIndex.sort(\n        () => Math.random() - 0.5,\n      );\n      const shuffledAnswers = shuffledAnswersWithIndex.map((ans) => ans[0]);\n      if (question.answerSelectionType === 'single') {\n        const oldCorrectAnswer = question.correctAnswer;\n        const newCorrectAnswer = shuffledAnswersWithIndex.findIndex(\n          (ans) => `${ans[1] + 1}` === `${oldCorrectAnswer}`,\n        ) + 1;\n        return {\n          ...question,\n          correctAnswer: `${newCorrectAnswer}`,\n          answers: shuffledAnswers,\n        };\n      }\n      if (question.answerSelectionType === 'multiple') {\n        const oldCorrectAnswer = question.correctAnswer;\n        const newCorrectAnswer = oldCorrectAnswer.map(\n          (cans) => shuffledAnswersWithIndex.findIndex(\n            (ans) => `${ans[1] + 1}` === `${cans}`,\n          ) + 1,\n        );\n        return {\n          ...question,\n          correctAnswer: newCorrectAnswer,\n          answers: shuffledAnswers,\n        };\n      }\n      return question;\n    });\n    return newQuestions;\n  };\n  const shuffleQuestions = useCallback((q) => {\n    for (let i = q.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [q[i], q[j]] = [q[j], q[i]];\n    }\n    return q;\n  }, []);\n\n  useEffect(() => {\n    if (disableSynopsis) setStart(true);\n  }, []);\n\n  useEffect(() => {\n    let newQuestions = quiz.questions;\n\n    if (shuffle) {\n      newQuestions = shuffleQuestions(newQuestions);\n    }\n\n    if (shuffleAnswer) {\n      newQuestions = shuffleAnswerSequence(newQuestions);\n    }\n\n    newQuestions.length = nrOfQuestions;\n    newQuestions = newQuestions.map((question, index) => ({\n      ...question,\n      questionIndex: index + 1,\n    }));\n    setQuestions(newQuestions);\n  }, [start]);\n\n  const validateQuiz = (q) => {\n    if (!q) {\n      console.error('Quiz object is required.');\n      return false;\n    }\n\n    if ((timer && typeof timer !== 'number') || (timer < 1)) {\n      console.error(timer && typeof timer !== 'number' ? 'timer must be a number' : 'timer must be a number greater than 0');\n      return false;\n    }\n\n    if (allowPauseTimer && typeof allowPauseTimer !== 'boolean') {\n      console.error('allowPauseTimer must be a Boolean');\n      return false;\n    }\n\n    for (let i = 0; i < questions.length; i += 1) {\n      const {\n        question,\n        questionType,\n        answerSelectionType,\n        answers,\n        correctAnswer,\n      } = questions[i];\n      if (!question) {\n        console.error(\"Field 'question' is required.\");\n        return false;\n      }\n\n      if (!questionType) {\n        console.error(\"Field 'questionType' is required.\");\n        return false;\n      }\n      if (questionType !== 'text' && questionType !== 'photo') {\n        console.error(\n          \"The value of 'questionType' is either 'text' or 'photo'.\",\n        );\n        return false;\n      }\n\n      if (!answers) {\n        console.error(\"Field 'answers' is required.\");\n        return false;\n      }\n      if (!Array.isArray(answers)) {\n        console.error(\"Field 'answers' has to be an Array\");\n        return false;\n      }\n\n      // Skip correctAnswer check for personality type questions\n      if (answerSelectionType !== 'personality' && !correctAnswer) {\n        console.error(\"Field 'correctAnswer' is required for non-personality questions.\");\n        return false;\n      }\n\n      let selectType = answerSelectionType;\n\n      if (!answerSelectionType) {\n        // Default single to avoid code breaking due to automatic version upgrade\n        console.warn(\n          'Field answerSelectionType should be defined since v0.3.0. Use single by default.',\n        );\n        selectType = answerSelectionType || 'single';\n      }\n\n      if (\n        selectType === 'single'\n        && !(typeof selectType === 'string' || selectType instanceof String)\n      ) {\n        console.error(\n          'answerSelectionType is single but expecting String in the field correctAnswer',\n        );\n        return false;\n      }\n\n      if (selectType === 'multiple' && !Array.isArray(correctAnswer)) {\n        console.error(\n          'answerSelectionType is multiple but expecting Array in the field correctAnswer',\n        );\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  if (!validateQuiz(quiz)) {\n    return null;\n  }\n\n  const appLocale = {\n    ...defaultLocale,\n    ...quiz.appLocale,\n  };\n\n  return (\n    <div className=\"react-quiz-container\">\n      {!start && (\n        <div>\n          <h2>{quiz.quizTitle}</h2>\n          <div>\n            {appLocale.landingHeaderText.replace(\n              '<questionLength>',\n              nrOfQuestions,\n            )}\n          </div>\n          {quiz.quizSynopsis && (\n            <div className=\"quiz-synopsis\">{quiz.quizSynopsis}</div>\n          )}\n          <div className=\"startQuizWrapper\">\n            <button type=\"button\" onClick={() => setStart(true)} className=\"startQuizBtn btn\">\n              {appLocale.startQuizBtn}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {start && (\n        <Core\n          questions={questions}\n          showDefaultResult={showDefaultResult}\n          onComplete={onComplete}\n          customResultPage={customResultPage}\n          showInstantFeedback={showInstantFeedback}\n          continueTillCorrect={continueTillCorrect}\n          revealAnswerOnSubmit={revealAnswerOnSubmit}\n          allowNavigation={allowNavigation}\n          appLocale={appLocale}\n          onQuestionSubmit={onQuestionSubmit}\n          timer={timer}\n          allowPauseTimer={allowPauseTimer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Quiz;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","QuizResultFilter","_ref","filteredValue","handleChange","appLocale","_useState2","_slicedToArray","useState","isOpen","setIsOpen","dropdownRef","useRef","toggleDropdown","handleOptionClick","value","target","selectedOptionClass","selectedValuesLocale","all","resultFilterAll","correct","resultFilterCorrect","incorrect","resultFilterIncorrect","unanswered","resultFilterUnanswered","useEffect","handleOutsideClick","contains","document","addEventListener","removeEventListener","_jsxs","className","children","concat","onClick","onKeyDown","role","tabIndex","_jsx","_","replace","RegExp","match","r","t","o","s","u","i","length","pop","push","$","toLowerCase","exec","substring","index","lastIndex","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","forEach","arrayPop","arrayPush","stringToLowerCase","String","stringToString","toString","stringMatch","stringReplace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","regExpTest","test","typeErrorCreate","unconstruct","TypeError","numberIsNaN","Number","isNaN","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","undefined","element","lcElement","cleanArray","clone","object","newObject","property","isArray","constructor","lookupGetter","prop","desc","get","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","console","warn","createDOMPurify","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","MAX_NESTING_DEPTH","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","elm","__depth","__removalCount","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","factory","rawMarkup","__html","snarkdown","sanitizer","dompurify","checkAnswer","correctAnswer","answerSelectionType","answers","userInput","userAttempt","currentQuestionIndex","continueTillCorrect","showNextQuestionButton","setButtons","setIsCorrect","setIncorrectAnswer","setCorrect","setIncorrect","setShowNextQuestionButton","setUserInput","setUserAttempt","indexStr","disabledAll","keys","map","disabled","userInputCopy","_toConsumableArray","prevState","_objectSpread","_defineProperty","selectedTrigram","trigram","reduce","acc","log","maxNumberOfMultipleSelection","includes","cnt","_loop","_i","selectAnswer","_ref2","selectedButtons","selected","splice","_step","exactMatch","_iterator","_createForOfIteratorHelper","done","input","err","Explanation","question","isResultPage","explanation","renderMessageForCorrectAnswer","messageForCorrectAnswer","renderMessageForIncorrectAnswer","messageForIncorrectAnswer","InstantFeedback","showInstantFeedback","incorrectAnswer","onQuestionSubmit","userAnswer","isCorrect","_Fragment","Core","questions","showDefaultResult","onComplete","customResultPage","revealAnswerOnSubmit","allowNavigation","timer","allowPauseTimer","_useState4","_useState6","_useState8","endQuiz","setEndQuiz","_useState10","setCurrentQuestionIndex","_useState12","buttons","_useState14","_useState16","_useState18","setUnanswered","_useState20","_useState22","setFilteredValue","_useState24","_useState26","showDefaultResultState","setShowDefaultResult","_useState28","answerSelectionTypeState","setAnswerSelectionType","_useState30","totalPoints","setTotalPoints","_useState32","correctPoints","setCorrectPoints","_useState34","activeQuestion","setActiveQuestion","_useState36","questionSummary","setQuestionSummary","_useState38","timeRemaining","setTimeRemaining","_useState40","isRunning","setIsRunning","totalPointsTemp","correctPointsTemp","point","parseInt","numberOfQuestions","numberOfCorrectAnswers","numberOfIncorrectAnswers","nextQuestion","currentQuestionIdx","alert","confirm","event","renderAnswerInResult","userInputIndex","questionType","answer","answerBtnClassName","isUserAnswer","option","src","alt","renderTags","numberOfSelection","segment","singleSelectionTagText","multipleSelectionTagText","pickNumberOfSelection","isCorrectCheck","correctAnswerIndex","_typeof","find","renderQuizResultQuestions","useCallback","filteredQuestions","filteredUserInput","targetQuestions","filter","dangerouslySetInnerHTML","questionIndex","marksOfQuestion","questionPic","countdown","setInterval","prevTime","clearInterval","formatTime","time","displayTime","hours","Math","floor","minutes","seconds","timerTimeTaken","timerTimeRemaining","handleTimeUp","getUnansweredQuestions","oldArray","toggleTimer","pauseScreenPause","pauseScreenResume","renderAnswers","answerButtons","onClickAnswer","onSelectAnswer","checkSelectedAnswer","Fragment","prevQuestionBtn","nextQuestionBtn","pauseScreenDisplay","renderResult","trigramTally","resultPageHeaderText","resultPagePoint","_ref3","count","defaultLocale","landingHeaderText","startQuizBtn","Quiz","quiz","shuffle","shuffleAnswer","disableSynopsis","start","setStart","setQuestions","nrOfQuestions","shuffleQuestions","j","random","newQuestions","shuffleAnswerSequence","_question$answers","shuffledAnswersWithIndex","ans","sort","shuffledAnswers","oldCorrectAnswer","newCorrectAnswer","findIndex","cans","validateQuiz","error","_questions$i","selectType","quizTitle","quizSynopsis","styleInject","css","insertAt","head","style","styleSheet","cssText"],"mappings":"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","x_google_ignoreList":[0,1,2,3,5,6,13]}